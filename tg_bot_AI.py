from openai import OpenAI
import telebot
import datetime
from telebot import types
from tok import *


# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞—Ç, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–≤–∞–ª –≤–æ–ø—Ä–æ—Å
question_dates = {}

question_counter = 0
max_questions = 10  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–¥–∞—Ç—å

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ API OpenAI —Å –≤–∞—à–∏–º API –∫–ª—é—á–æ–º
client = OpenAI(
    api_key=open_ai_key,
    base_url="https://api.proxyapi.ru/openai/v1",
)
bot = telebot.TeleBot(key)

def can_ask_question(user_id):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–¥–∞–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ–ø—Ä–æ—Å —Å–µ–≥–æ–¥–Ω—è –º–∞–∫—Å–∏–º–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑
    if user_id in question_dates and question_counter == max_questions:
        today = datetime.date.today()
        last_question_date = question_dates[user_id]
        if last_question_date == today:
            return False  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Å–∞–≥–æ–¥–Ω—è
    return True  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    mark = types.InlineKeyboardMarkup()
    mark.add(types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ üí¨', callback_data='bot'))
    mark.add(types.InlineKeyboardButton('–ö—É—Ä—Å –≤–∞–ª—é—Ç üí∑ üí¥ üí∂', callback_data='exchange_rate'),types.InlineKeyboardButton('–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—èüí∑=>üí∂', callback_data='convert_value'))
    photo_file = (
        'https://media.wired.com/photos/66425c483aeee12d6ca99835/master/w_1920,c_limit/New-ChatGPT-Tier-Gear-GettyImages-2151457871.jpg')
    bot.send_photo(message.chat.id, photo_file)
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Çüëã  –Ø –±–æ—Ç ü§ñ, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç—å ChatGPT –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤. –ú–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ —á–µ–º-—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å!"
                     "\n\n–¢–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –Ω–æ–≤—ã–π –Ω–∞–≤—ã–∫, —è –º–æ–≥—É –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç üí∑ üí¥ üí∂ , –∞ —Ç–∞–∫ –∂–µ —Å–¥–µ–ª–∞—Ç—å –∏—Ö –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é."
                     , reply_markup=mark)
@bot.callback_query_handler(func=lambda callback: callback.data == 'bot')
def new_answer(callback):
        bot.send_message(callback.message.chat.id, '–ß–µ–º –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å‚ùì')


def chat_with_ai(message_text):# —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    messages = [{"role": "user", "content": message_text}]
    # –ó–∞–ø—Ä–æ—Å –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_completion = client.chat.completions.create(
        model='gpt-3.5-turbo-1106',
        messages=messages
    )
    # –û—Ç–≤–µ—Ç –æ—Ç AI
    response_message = chat_completion.choices[0].message.content
    return response_message

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    global question_counter  # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é question_counter –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏
    user_id = message.from_user.id
    if question_counter < max_questions and can_ask_question(user_id):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–¥–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
        response = chat_with_ai(message.text)
        bot.send_message(message.chat.id, response)
        question_counter += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–¥–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ 1
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        question_dates[user_id] = datetime.date.today()
    else:
        bot.send_message(message.chat.id, "–û—á–µ–Ω—å –∂–∞–ª—å üòî, –Ω–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤—ã –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤."
                                          " –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞ üëã")

@bot.callback_query_handler(func=lambda callback: callback.data == 'exchange_rate')#–≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
def exchange_rate(callback):
        bot.send_message(callback.message.chat.id, "–û—á–µ–Ω—å –∂–∞–ª—å üòî, –Ω–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤—ã –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤."
                                          " –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞ üëã")


bot.polling(none_stop=True)
